{"version":3,"sources":["store.js","App.js","serviceWorker.js","index.js"],"names":["initialState","my_games","profile","store","createContext","Provider","handlers","StateProvider","children","useReducer","state","action","type","Error","dispatch","value","payload","games","map","game","data","results","getMyGames","searchList","a","promiseArray","search","configOptions","params","headers","axios","get","push","Promise","all","allGames","App","useContext","useState","background_image","background","setBackground","active","setActive","jumbotron","setJumbotron","modal","setModal","toast","setToast","backgroundImage","AppStyles","backgroundSize","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","useEventListener","useCallback","key","keyCode","length","document","querySelector","style","display","cardsAreaClass","cardDetailsClass","className","Navbar","bg","expand","Brand","href","src","alt","Tabs","defaultActiveKey","variant","onSelect","Tab","eventKey","title","Container","cardsToRender","card","index","cardClass","id","Card","onClick","setTimeout","Img","renderCards","name","rating","reviews_count","released","Spinner","animation","Jumbotron","short_screenshots","screenshot","image","clip","renderClip","Modal","show","onHide","dialogClassName","aria-labelledby","centered","Header","closeButton","Title","Body","autoPlay","Toast","onClose","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0f13af10.chunk.js","sourcesContent":["import React, {createContext, useReducer} from 'react';\n\nconst initialState = {\n  my_games: [],\n  profile: null\n};\nconst store = createContext(initialState); // has Provider and Consumer\nconst { Provider } = store;\nlet handlers = [];\n\nconst StateProvider = ( { children } ) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    if (!handlers[action.type]) throw Error();\n    return handlers[action.type](state, action);\n  }, initialState);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nhandlers[\"GET_MY_GAMES\"] = (state, {type, payload}) => {\n  if (payload) {\n    const games = payload;\n    return {\n      ...state,\n      my_games: games.map((game) => game && game.data && game.data.results && game.data.results[0] ? game.data.results[0] : null)\n    }\n  }\n  return {\n    ...state\n  };\n};\n\nexport { store, StateProvider }","import React, { useContext, useState, useEffect, useCallback, useRef} from 'react';\nimport './App.scss';\nimport { Card, Jumbotron, Modal, Navbar, Spinner, Tab, Tabs, Toast} from 'react-bootstrap';\nimport axios from \"axios\";\nimport { store } from './store.js';\n\n// Hook\nfunction useEventListener(eventName, handler, element = window){\n\t// Create a ref that stores handler\n\tconst savedHandler = useRef();\n\t// Update ref.current value if handler changes.\n\t// This allows our effect below to always get latest handler ...\n\t// ... without us needing to pass it in effect deps array ...\n\t// ... and potentially cause effect to re-run every render.\n\tuseEffect(() => {\n\t  savedHandler.current = handler;\n\t}, [handler]);\n  \n\tuseEffect(\n\t  () => {\n\t\t// Make sure element supports addEventListener\n\t\t// On \n\t\tconst isSupported = element && element.addEventListener;\n\t\tif (!isSupported) return;\n\t\t\n\t\t// Create event listener that calls handler function stored in ref\n\t\tconst eventListener = event => savedHandler.current(event);\n\t\t\n\t\t// Add event listener\n\t\telement.addEventListener(eventName, eventListener);\n\t\t\n\t\t// Remove event listener on cleanup\n\t\treturn () => {\n\t\t  element.removeEventListener(eventName, eventListener);\n\t\t};\n\t  },\n\t  [eventName, element] // Re-run if eventName or element changes\n\t);\n  };\n\nexport const renderCards = (cardsToRender, active, setActive, setBackground, jumbotron) => {\n\treturn cardsToRender.map((card, index) => {\n\t\tconst onCardClick = () => {\n\t\t\tsetActive(-1);\n\t\t\tsetTimeout(() => setActive(index),  100);\n\t\t\tsetTimeout(() => setBackground(card), 100);\n\t\t};\n\t\tlet cardClass = \"\";\n\t\tif (jumbotron && card.id !== jumbotron.id) {\n\t\t\tcardClass += \"hide_card\";\n\t\t}\n\t\tif (index === active && !jumbotron) cardClass += \" active original_card\";\n\t\tif (index === active && jumbotron) cardClass += \" active small_card\";\n\t\treturn (\n\t\t\t<Card key={index} className={cardClass} onClick={onCardClick}>\n\t\t\t\t<Card.Img variant=\"top\" src={card.background_image}/>\n\t\t\t</Card>\n\t\t);\n\t});\n};\n\n\n\n\n// Should be moved to /services folder later\nexport const getMyGames = async (searchList, dispatch) => {\n\tconst promiseArray = [];\n\tsearchList.map((search) => {\n\t\tconst params = {search};\n\t\tconst headers = {\n\t\t\t\"content-type\":\"application/octet-stream\",\n\t\t\t\"x-rapidapi-host\":\"rawg-video-games-database.p.rapidapi.com\",\n\t\t\t\"x-rapidapi-key\":\"ODHN3VlIzzmshKAnBUsbJkIBcfJJp1z2fyljsn34NdixmA9Hlm\"\n\t\t};\n\t\tconst configOptions = {params, headers};\n\t\tconst results = axios.get(\"https://rawg-video-games-database.p.rapidapi.com/games\", configOptions);\n\t\tpromiseArray.push(results);\n\t});\n\tconst allGames = await Promise.all(promiseArray);\n\tdispatch({type: 'GET_MY_GAMES', payload: allGames});\n};\n\n//\nexport const renderScreenshots = (game) => {\n\tconst screenshots = game && game.short_screenshots ? game.short_screenshots.map((screenshot, index) => <img key={index} src={screenshot.image} />) : [];\n\treturn screenshots;\n};\n\nexport const renderClip = (game,setModal) => {\n\tconst onOverlayClick = () => {\n\t\tsetModal(true);\n\t}\n\tconst screenshots = game && game.clip && game.clip.clip ? (\n\t\t<div className=\"clip\">\n\t\t\t<video>\n\t\t\t\t<source src={game.clip.clip} type=\"video/mp4\"/>\n\t\t\t</video>\n\t\t\t<div className=\"overlay\" onClick={onOverlayClick}>\n\t\t\t\t<p>Preview</p>\n\t\t\t</div>\n\t\t</div>\n\t) : [];\n\treturn screenshots;\n};\n\nfunction App() {\n\tconst {state, dispatch} = useContext(store);\n\tconst { my_games } = state;\n\tconst [background, setBackground] = useState({background_image: null});\n\tconst [active, setActive] = useState(-1);\n\tconst [jumbotron, setJumbotron] = useState(null);\n\tconst [modal, setModal] = useState(false);\n\tconst [toast, setToast] = useState(true);\n\tconst toggleToast = () => setToast(!toast);\n\tlet backgroundImage = \"linear-gradient(rgb(32, 33, 45),rgba(0, 0, 0, 0.6))\";\n\tif (background && background.background_image) {\n\t\tbackgroundImage = `linear-gradient(rgba(0, 0, 0, 0.6),rgba(0, 0, 0, 0.6)),url(${background.background_image})`;\n\t}\n\tconst AppStyles = {\n\t\tbackgroundImage,\n\t\tbackgroundSize: \"100% 100%\"\n\t};\n\n\n\n// Handler for when clicking on Tab\n\tconst useOnTabSelect = () => {\n\t\t\tconst searchList = [\n\t\t\t\t\"Assassin's Creed Odyssey\",\n\t\t\t\t\"Rise of the Tomb Raider\",\n\t\t\t\t\"The Wolf Among Us\",\n\t\t\t];\n\t\t\tif (my_games.length === 0) {\n\t\t\t\tgetMyGames(searchList, dispatch);\n\t\t\t}\n\t}\n\n\tconst handler = useCallback((event) => {\n\t\tlet key;\n\t\tif (event.keyCode === 37 && my_games && my_games.length) {\n\t\t\tkey = active >= 1 ? (active - 1) : active;\n\t\t\tsetActive(key);\n\t\t}\n\t\tif (event.keyCode === 39 && my_games && my_games.length) {\n\t\t\tkey = active < my_games.length - 1 ? (active + 1) : active;\n\t\t\tsetActive(key);\n\t\t}\n\t\tif (event.keyCode === 40 && my_games && my_games.length) {\n\t\t\tsetJumbotron({\n\t\t\t\t...my_games[active]\n\t\t\t});\n\t\t} else if (event.keyCode === 38 && my_games && my_games.length){\n\t\t   setJumbotron(null);\n\t\t   setModal(false);\n\t\t}\n\t}, [my_games, active]);\n\tuseEventListener('keydown', handler);\n\t\n\tuseEffect(() => {\n\t\tif (jumbotron) {\n\t\t\tdocument.querySelector('.tabs.nav-pills').style.display = \"none\";\n\t\t} else {\n\t\t\tdocument.querySelector('.tabs.nav-pills').style.display = \"flex\";\n\t\t}\n\t}, [jumbotron])\n\tconst cardsAreaClass = jumbotron ? \"cards_area fade-in jumbotron_on\" : \"cards_area fade-in\";\n\tconst cardDetailsClass = jumbotron ? \"card_details jumbotron_on\" : \"card_details fade-in\";\n\treturn (\n\t\t<div className=\"App\" style={AppStyles}>\n\t\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t\t<Navbar.Brand href=\"#home\">\n\t\t\t\t\t<img src=\"./images/assassincreed.jpg\" alt=\"\"/>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>kman2394</p>\n\t\t\t\t\t</>\n\t\t\t\t</Navbar.Brand>\n\t\t\t</Navbar>\n\t\t\t<Tabs defaultActiveKey=\"profile\" variant=\"pills\" className=\"tabs\" onSelect={useOnTabSelect}>\n\t\t\t\t<Tab eventKey=\"profile\" title=\"Profile\">\n\t\t\t\t\t\n\t\t\t\t</Tab>\n\t\t\t\t<Tab.Container eventKey=\"games\" title=\"My Games\">\n\t\t\t\t\t{my_games && my_games.length ? <div className={cardsAreaClass}>\n\t\t\t\t\t\t<div className=\"cards\">\n\t\t\t\t\t\t\t{renderCards(my_games, active, setActive, setBackground, jumbotron)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* Utilize useRef to move details under image */}\n\t\t\t\t\t\t{active >= 0 && \n\t\t\t\t\t\t<div className={cardDetailsClass}>\n\t\t\t\t\t\t\t<h2 className=\"game_name\">{my_games && my_games[active] && my_games[active].name}</h2>\n\t\t\t\t\t\t\t<div className=\"game_info\">\n\t\t\t\t\t\t\t\t<p>Rating</p>\n\t\t\t\t\t\t\t\t<p>Reviews</p>\n\t\t\t\t\t\t\t\t<p>Released</p>\n\t\t\t\t\t\t\t\t<p className=\"info\">{my_games && my_games[active] && my_games[active].rating}</p>\n\t\t\t\t\t\t\t\t<p className=\"info\">{my_games && my_games[active] && my_games[active].reviews_count}</p>\n\t\t\t\t\t\t\t\t<p className=\"info\">{my_games && my_games[active] && my_games[active].released}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div> : <div className=\"spinner_area\"><Spinner animation=\"grow\" /></div>}\n\t\t\t\t</Tab.Container>\n\t\t\t</Tabs>\n\t\t\t{jumbotron && <Jumbotron className=\"fade-in\">\n\t\t\t\t\t\t\t<div className=\"screenshots\">\n\t\t\t\t\t\t\t\t<h4>Screenshots</h4>\n\t\t\t\t\t\t\t\t<div className=\"shots\">\n\t\t\t\t\t\t\t\t\t{renderScreenshots(jumbotron)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"clips\">\n\t\t\t\t\t\t\t\t<h4>Gameplay</h4>\n\t\t\t\t\t\t\t\t<div className=\"area\">\n\t\t\t\t\t\t\t\t\t{renderClip(jumbotron, setModal)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Jumbotron>}\n\n\t\t<Modal\n        show={modal}\n        onHide={() => setModal(false)}\n        dialogClassName=\"modal-90w\"\n\t\taria-labelledby=\"example-custom-modal-styling-title\"\n\t\tcentered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            {jumbotron && jumbotron.name}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\t\t\t{jumbotron && jumbotron.clip && <video autoPlay>\n\t\t\t\t<source src={jumbotron.clip.clip} type=\"video/mp4\"/>\n\t\t\t</video>}\n        </Modal.Body>\n      </Modal>\n\t  <Toast show={toast} onClose={toggleToast}>\n\t\t<Toast.Header>\n\t\t\t<strong className=\"mr-auto\">Navigation</strong>\n\t\t</Toast.Header>\n\t\t<Toast.Body>\n\t\t\t<p>Use MOUSE to move arrow</p>\n\t\t\t<p>Use LEFT/RIGHT ARROW KEYS to move through games</p>\n\t\t\t<p>Use UP/DOWN ARROW KEYS to view game information</p>\n\t\t</Toast.Body>\n\t\t</Toast>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { StateProvider } from './store.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}