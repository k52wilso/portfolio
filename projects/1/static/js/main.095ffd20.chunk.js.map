{"version":3,"sources":["utils/actionTypes.js","reducers/notificationReducer.js","reducers/WalletReducer.js","reducers/dashboardReducer.js","reducers/navigationReducer.js","reducers/transcationsReducer.js","reducers/receiptReducer.js","reducers/notificationAlertsReducer.js","reducers/index.js","store.js","components/icon/icon.js","components/sidebar.js","services/httpService.js","actions/WalletActions.js","actions/navigationActions.js","containers/NotificationContainer.js","components/editable.js","components/card.js","components/cardholder.js","components/carouselitem.js","components/carousel.js","components/wallet.js","containers/WalletContainer.js","components/overlay.js","components/offer.js","components/offers.js","components/dashboard.js","actions/dashboardActions.js","containers/DashboardContainer.js","actions/transcationsActions.js","components/transcations.js","containers/TranscationsContainer.js","containers/ReceiptContainer.js","actions/receiptActions.js","containers/NotificationAlertsContainer.js","actions/notificationAlertsActions.js","containers/MainContainer.js","App.js","serviceWorker.js","index.js"],"names":["ACTIONTYPES","NOTIFICATION_START_WAITING","NOTIFICATION_STOP_WAITING","GET_WALLET","CLOSE_WALLET","GET_DASHBOARD","GET_TRANSCATIONS","GET_RECEIPT","NAVIGATION_CHANGE","GET_NOTIFICATION_ALERTS","handlers","initialState","isWaiting","waitingActionTypes","state","payload","newWaitingActionTypes","Object","toConsumableArray","push","type","objectSpread","index","indexOf","splice","length","walletOpen","wallet","charts","savingsSummary","location","newLocation","data","receiptDetails","alerts","rootReducer","combineReducers","notification","arguments","undefined","action","dashboard","navigation","transcations","receipt","notificationAlerts","store","createStore","applyMiddleware","thunk","logger","Icon","icon","this","props","activeClass","active","react_default","a","createElement","className","concat","size","title","name","class","Component","SideBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","activeItem","id","setItem","bind","assertThisInitialized","item","callback","setState","_this$props","items","pathname","i","path","_this2","map","Link","key","to","onClick","icon_icon","SideBarWithRouter","withRouter","user","imageURL","total","cards","number","cardOwner","expiryDate","savings","spending","amt","trend","carousel","createData","amount","date","cardID","Date","now","status","currentValue","bounds","min","max","HttpService","Promise","resolve","getReceiptForTranscation","console","log","getWallet","dispatch","setTimeout","then","response","changeNavigation","NotificationLoader","NotificationContainer","connect","actionTypes","Editable","editIsOpen","editedText","toggleState","confirmOrCancel","onChange","content","text","event","target","value","_this$state","classes","Card","newNumber","substr","toEdit","card","toLowerCase","imageSrc","imageClass","src","alt","editable","buildEditableContent","CardHolder","components_card","CarouselItem","topic","addDivider","carouselItems","Carousel","carouselitem","Wallet","Intl","NumberFormat","style","currency","format","cardholder","WalletConnect","_closeWallet","closeWallet","openClass","includes","containers_NotificationContainer","components_wallet","WalletContainer","Overlay","Offer","offerIsOpen","closeOffer","offer","offerClass","background","header","linkCallback","link","offers","Offers","components_offer","rows","Dashboard","components_offers","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","row","component","scope","toLocaleString","search","getDashboard","DashboardConnect","obj","hasOwnProperty","isEmpty","_this$props2","_this$props3","dashboardContainerClass","getClass","components_dashboard","DashboardContainer","getTranscations","Transcations","TranscationsConnect","components_transcations","TranscationsContainer","months","buildDateTime","dateObj","transcationDate","getDate","month","getMonth","hours","getHours","minutes","getMinutes","year","getFullYear","time","ReceiptConnect","getReceipt","searchParams","URLSearchParams","Number","get","getCardUsed","error","getCardUsedForTranscation","displayCardUsed","charAt","ReceiptContainer","openWallet","monthlyLimits","pv","dailyLimits","NotificationAlertsConnect","getAlerts","alert","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","domain","CartesianGrid","strokeDasharray","Tooltip","Legend","ReferenceLine","y","label","stroke","Line","NotificationAlertsContainer","MainConnect","history","changeTo","containerClass","containers_WalletContainer","Route","exact","overlay","MainContainer","sideBar","AppContainer","BrowserRouter","components_sidebar","buildItems","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","render","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.095ffd20.chunk.js","sourcesContent":["export const ACTIONTYPES = {\r\n    NOTIFICATION_START_WAITING: \"NOTIFICATION_START_WAITING\",\r\n    NOTIFICATION_STOP_WAITING: \"NOTIFICATION_STOP_WAITING\",\r\n    GET_WALLET: \"GET_WALLET\",\r\n    CLOSE_WALLET: \"CLOSE_WALLET\",\r\n    GET_DASHBOARD: \"GET_DASHBOARD\",\r\n    GET_TRANSCATIONS: \"GET_TRANSCATIONS\",\r\n    GET_RECEIPT: \"GET_RECEIPT\",\r\n    NAVIGATION_CHANGE: \"NAVIGATION_CHANGE\",\r\n    GET_NOTIFICATION_ALERTS: \"GET_NOTIFICATION_ALERTS\"\r\n};","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nlet handlers  = {};\r\nconst initialState = {\r\n    isWaiting: false,\r\n    waitingActionTypes: []\r\n};\r\n\r\nhandlers[ACTIONTYPES.NOTIFICATION_START_WAITING] = (state, payload) => {\r\n    const newWaitingActionTypes = [...state.waitingActionTypes];\r\n    newWaitingActionTypes.push(payload.type);\r\n    return {\r\n        ...state,\r\n        waitingActionTypes: newWaitingActionTypes,\r\n        isWaiting: true\r\n    };\r\n};\r\n\r\nhandlers[ACTIONTYPES.NOTIFICATION_STOP_WAITING] = (state, payload) => {\r\n    const index = state.waitingActionTypes.indexOf(payload.type);\r\n    const newWaitingActionTypes = [...state.waitingActionTypes];\r\n    if (index !== -1) newWaitingActionTypes.splice(index,1);\r\n    return {\r\n        ...state,\r\n        waitingActionTypes: newWaitingActionTypes,\r\n        isWaiting: newWaitingActionTypes.length > 0 ? true : false\r\n    }\r\n};\r\n\r\nexport const notification = (state = initialState, action) => {\r\n    const { type, payload } = action\r\n    const index = state.waitingActionTypes.indexOf(type);\r\n    if (state.isWaiting && state.waitingActionTypes && index > -1) {\r\n        return state;\r\n    }\r\n    switch (type) {\r\n        case ACTIONTYPES.NOTIFICATION_START_WAITING:\r\n          return handlers[type](state, payload);\r\n        case ACTIONTYPES.NOTIFICATION_STOP_WAITING:\r\n          return handlers[type](state, payload);\r\n        default:\r\n          return state;\r\n    }\r\n}","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nlet handlers  = {};\r\nconst initialState = {\r\n    walletOpen: false\r\n};\r\n\r\nhandlers[ACTIONTYPES.GET_WALLET] = (state, payload) => {\r\n    return {\r\n        ...state, \r\n        ...payload\r\n    };\r\n};\r\nhandlers[ACTIONTYPES.CLOSE_WALLET] = (state) => {\r\n    return {\r\n        ...state,\r\n        ...state.wallet,\r\n        walletOpen: false\r\n    };\r\n};\r\n\r\nexport const wallet = (state = initialState, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case ACTIONTYPES.GET_WALLET:\r\n          return handlers[type](state, payload);\r\n          case ACTIONTYPES.CLOSE_WALLET:\r\n          return handlers[type](state, payload);\r\n        default:\r\n          return state;\r\n    }\r\n}","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nlet handlers  = {};\r\nconst initialState = {\r\n    charts: [],\r\n    savingsSummary: {}\r\n};\r\n\r\nhandlers[ACTIONTYPES.GET_DASHBOARD] = (state, payload) => {\r\n    return {\r\n        ...state,\r\n        charts: payload.charts,\r\n        savingsSummary: payload.savingsSummary\r\n    };\r\n};\r\n\r\nexport const dashboard = (state = initialState, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case ACTIONTYPES.GET_DASHBOARD:\r\n          return handlers[type](state, payload);\r\n        default:\r\n          return state;\r\n    }\r\n}","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nlet handlers  = {};\r\nconst initialState = {\r\n    location: \"/\"\r\n};\r\n\r\nhandlers[ACTIONTYPES.NAVIGATION_CHANGE] = (state, payload) => {\r\n    const { location } = payload;\r\n    let newLocation = location; \r\n\r\n    if (location === state.location) {\r\n        newLocation = state.location;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n\r\n        location: newLocation\r\n    };\r\n};\r\n\r\nexport const navigation = (state = initialState, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case ACTIONTYPES.NAVIGATION_CHANGE:\r\n          return handlers[type](state, payload);\r\n        default:\r\n          return state;\r\n    }\r\n}","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nlet handlers  = {};\r\nconst initialState = {\r\n    data: []\r\n};\r\n\r\nhandlers[ACTIONTYPES.GET_TRANSCATIONS] = (state, payload) => {\r\n    const { data } = payload;\r\n    return {\r\n        ...state,\r\n        data\r\n    };\r\n};\r\n\r\nexport const transcations = (state = initialState, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case ACTIONTYPES.GET_TRANSCATIONS:\r\n          return handlers[type](state, payload);\r\n        default:\r\n          return state;\r\n    }\r\n}","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nlet handlers  = {};\r\nconst initialState = {\r\n    receiptDetails: {}\r\n};\r\n\r\nhandlers[ACTIONTYPES.GET_RECEIPT] = (state, payload) => {\r\n    return {\r\n        ...state,\r\n        receiptDetails: payload\r\n    };\r\n};\r\n\r\nexport const receipt = (state = initialState, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case ACTIONTYPES.GET_RECEIPT:\r\n          return handlers[type](state, payload);\r\n        default:\r\n          return state;\r\n    }\r\n}","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nlet handlers  = {};\r\nconst initialState = {\r\n    alerts: []\r\n};\r\n\r\nhandlers[ACTIONTYPES.GET_NOTIFICATION_ALERTS] = (state, payload) => {\r\n    return {\r\n        ...state,\r\n        alerts: payload\r\n    };\r\n};\r\n\r\nexport const notificationAlerts = (state = initialState, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case ACTIONTYPES.GET_NOTIFICATION_ALERTS:\r\n          return handlers[type](state, payload);\r\n        default:\r\n          return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { notification } from \"./notificationReducer\";\r\nimport { wallet } from \"./WalletReducer\";\r\nimport { dashboard } from \"./dashboardReducer\";\r\nimport { navigation } from \"./navigationReducer\";\r\nimport { transcations } from \"./transcationsReducer\";\r\nimport { receipt } from \"./receiptReducer\";\r\nimport { notificationAlerts } from \"./notificationAlertsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    notification,\r\n    wallet,\r\n    dashboard,\r\n    navigation,\r\n    transcations,\r\n    receipt,\r\n    notificationAlerts\r\n});\r\n\r\nexport default rootReducer;","import thunk from 'redux-thunk'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './reducers'\r\n\r\nimport logger from 'redux-logger';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(\r\n    thunk, // lets us dispatch() functions\r\n    logger // neat middleware that logs actions\r\n  )\r\n)\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport \"../../styles/icon.scss\";\r\nclass Icon extends Component {\r\n    render() {\r\n        const { icon } = this.props;\r\n        const activeClass = icon.active ? \" active\" : \"\";\r\n        return icon ? (\r\n            <div className={`icon-${icon.size + activeClass}`} title={icon.name}>\r\n                <i className={icon.class}></i>\r\n            </div>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default Icon;","import React, { Component } from 'react';\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport Icon from \"./icon/icon\";\r\nimport \"../styles/sidebar.scss\";\r\nclass SideBar extends Component {\r\n\r\n    state = {\r\n        activeItem: {\r\n            id: \"\"\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setItem = this.setItem.bind(this);\r\n    }\r\n\r\n    setItem(item) {\r\n        if (item.callback) item.callback();\r\n        this.setState({\r\n            activeItem: item\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { items, location } = this.props\r\n        let activeItem;\r\n        if (location.pathname === \"/\") {\r\n            activeItem = items[0]; // return dashboard as default \r\n        } else {\r\n            for (let i = 0; i < items.length; i++) {\r\n                if (items[i].path && items[i].path === location.pathname) activeItem = items[i];\r\n            }\r\n        }\r\n        \r\n        this.setState({activeItem});\r\n    }\r\n\r\n    render() {\r\n        const { items } = this.props;\r\n        const { activeItem } = this.state;\r\n\r\n        return items && items.length ? (\r\n            <div className=\"sidebar\">\r\n                <div className=\"logo\">\r\n                    <i>D</i>\r\n                </div>\r\n                <div className=\"navigation\">\r\n                {items.map((item) => {\r\n                    item.active = (activeItem && activeItem.id === item.id) ? true : false;\r\n                    if (item.active && item.walletOpen === false) item.active = false;\r\n\r\n                    if (item.path) {\r\n                        return (\r\n                            <Link key={item.id} to={item.path} onClick={this.setItem.bind(this, item)}>\r\n                                <Icon key={item.id} icon={item} />\r\n                            </Link>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <button key={item.id} onClick={this.setItem.bind(this, item)}>\r\n                                <Icon key={item.id} icon={item} />\r\n                            </button>\r\n                        );\r\n                    }\r\n                })}\r\n                </div>\r\n            </div>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nconst SideBarWithRouter = withRouter(SideBar);\r\n\r\nexport default SideBarWithRouter;","\r\nconst wallet = {\r\n    user: {\r\n        name: \"Kyle Wilson-McCormack\",\r\n        imageURL: \"/assets/images/me.jpg\"\r\n    },\r\n    total: \"28520\",\r\n    cards: [{\r\n        id: \"010\",\r\n        type: \"VISA\",\r\n        number: \"1234 5678 9000 1000\",\r\n        cardOwner: \"Kyle Wilson-McCormack\",\r\n        expiryDate: \"02/21\"\r\n    }, {\r\n        id: \"011\",\r\n        type: \"MASTERCARD\",\r\n        number: \"1234 5678 9000 1000\",\r\n        cardOwner: \"Kyle Wilson-McCormack\",\r\n        expiryDate: \"02/21\"\r\n    }]\r\n};\r\n\r\nconst dashboard = {\r\n    charts: [{\r\n        data : [\r\n            {name: 'Apr', savings: 2390, spending: 3800, amt: 2500},\r\n            {name: 'May', savings: 2390, spending: 3800, amt: 2500},\r\n            {name: 'Jun', savings: 2390, spending: 3800, amt: 2500},\r\n            {name: 'Jul', savings: 2390, spending: 3800, amt: 2500},\r\n            {name: 'Aug', savings: 2390, spending: 3800, amt: 2500},\r\n            {name: 'Sep', savings: 2390, spending: 3800, amt: 2500},\r\n            {name: 'Oct', savings: 2390, spending: 3800, amt: 2500},\r\n            {name: 'Nov', savings: 3490, spending: 4300, amt: 2100},\r\n        ],\r\n        type: \"money-history\"\r\n    }],\r\n    savingsSummary: {\r\n        total: \"CAN 280,520.00\",\r\n        trend: \"15%\",\r\n        carousel: [] // items for carousel\r\n    }\r\n}\r\n\r\nlet id = 0;\r\nfunction createData(name, amount, date, cardID) {\r\n  id += 1;\r\n  return { id, name, amount, date, cardID};\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Walmart\", 198.99, Date.now(), \"010\"),\r\n  createData(\"Costco\", 300, Date.now(), \"011\"),\r\n  createData(\"Moxies\", 29.00, Date.now(), \"010\")\r\n];\r\n\r\nconst transcations = {\r\n    data: rows\r\n};\r\n\r\nconst getReceiptForTranscation = (id) => {\r\n    for (let i = 0; i < transcations.data.length; i++) {\r\n        if (id === transcations.data[i].id) return transcations.data[i];\r\n    }\r\n    \r\n    return {};\r\n}\r\n\r\nconst alerts = [{\r\n    id: \"010\",\r\n    status: \"approaching\",\r\n    name: \"Daily Limit\",\r\n    currentValue: 120,\r\n    bounds: {\r\n        min: 0,\r\n        max: 1000\r\n    }\r\n}, {\r\n    id: \"011\",\r\n    status: \"exceeded\",\r\n    name: \"Monthly Limit\",\r\n    currentValue: 1350,\r\n    bounds: {\r\n        min: 0,\r\n        max: 1300\r\n    }\r\n}]\r\n\r\nclass HttpService {\r\n    static getWallet() {\r\n        return new Promise((resolve) => {\r\n            resolve(wallet);\r\n        });\r\n    }\r\n\r\n    static getDashboard(){\r\n        return new Promise((resolve) => {\r\n            resolve(dashboard);\r\n        });\r\n    }\r\n\r\n    static getTranscations(){\r\n        return new Promise((resolve) => {\r\n            resolve(transcations);\r\n        });\r\n    }\r\n\r\n    static getReceipt(id) {\r\n        const receipt = getReceiptForTranscation(id);\r\n        return new Promise((resolve) => {\r\n            if (receipt.name) {\r\n                resolve(receipt);\r\n            } else {\r\n                console.log(\"There was an error getting receipt data: \", receipt);\r\n            }\r\n        });\r\n    }\r\n\r\n    static getAlerts() {\r\n        return new Promise((resolve) => {\r\n            resolve(alerts);\r\n        });\r\n    }\r\n}\r\n\r\nexport default HttpService;","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport HttpService from \"../services/httpService\";\r\nexport function getWallet(walletOpen = true) {\r\n    return (dispatch) => {\r\n        const returnVal = dispatch({type: ACTIONTYPES.NOTIFICATION_START_WAITING, payload: {type: ACTIONTYPES.GET_WALLET}});\r\n        if ( returnVal.payload.type === ACTIONTYPES.GET_WALLET) {\r\n            setTimeout(() => {\r\n                HttpService.getWallet().then((response) => {\r\n                    dispatch({type: ACTIONTYPES.GET_WALLET, payload: {...response, walletOpen}});\r\n                    dispatch({type: ACTIONTYPES.NOTIFICATION_STOP_WAITING, payload: {type: ACTIONTYPES.GET_WALLET}});\r\n                });\r\n            }, 800);\r\n        }\r\n        \r\n    };\r\n}\r\n\r\nexport function closeWallet() {\r\n    return (dispatch) => {\r\n            dispatch({type: ACTIONTYPES.CLOSE_WALLET});\r\n    }\r\n}","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nexport function changeNavigation(location) {\r\n    return (dispatch) => {\r\n        dispatch({type: ACTIONTYPES.NOTIFICATION_START_WAITING, payload:{type: ACTIONTYPES.NAVIGATION_CHANGE}});\r\n        setTimeout(() => {\r\n            dispatch({type: ACTIONTYPES.NAVIGATION_CHANGE, payload: {location}});\r\n            dispatch({type: ACTIONTYPES.NOTIFICATION_STOP_WAITING, payload: {type: ACTIONTYPES.NAVIGATION_CHANGE}});\r\n        }, 800);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport \"../styles/notificationcontainer.scss\";\r\n  \r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        isWaiting: state.notification.isWaiting,\r\n        actionTypes: state.notification.waitingActionTypes\r\n    }\r\n}\r\nclass NotificationLoader extends Component {\r\n    render() {\r\n        const { isWaiting } = this.props;\r\n        return (\r\n            <div className=\"notification-container\">\r\n                {isWaiting ? <div className=\"loader\"></div> :  null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst NotificationContainer = connect(\r\n    mapStateToProps, null\r\n)(NotificationLoader);\r\n\r\n\r\nexport default NotificationContainer;","import React, { Component } from \"react\";\r\n\r\nclass Editable extends Component {\r\n    state  = {\r\n        editIsOpen: false,\r\n        editedText: \"\",\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleState = this.toggleState.bind(this);\r\n        this.confirmOrCancel = this.confirmOrCancel.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { content } = this.props;\r\n        if (content.text) this.setState({editedText: content.text});\r\n    }\r\n\r\n    toggleState() { \r\n        const { editIsOpen } = this.state;\r\n        this.setState({\r\n            editIsOpen: !editIsOpen\r\n        });\r\n    }\r\n\r\n    onChange(event) {\r\n        this.setState({\r\n            editedText: event.target.value\r\n        });\r\n    }\r\n\r\n    confirmOrCancel(event) {\r\n        const { editIsOpen } = this.state;\r\n        if (editIsOpen && event === \"confirm\") {\r\n            // do some type of processing\r\n        }\r\n        this.setState({\r\n            editIsOpen: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { content } = this.props;\r\n        const { editIsOpen, editedText } = this.state;\r\n        const { type, classes } = content;\r\n        return (\r\n            <div className=\"editable\">\r\n                {editIsOpen ?  <input type={type} value={editedText} onChange={this.onChange.bind(this)}/> : <p className={classes}  onClick={this.toggleState}>{editedText}</p>}\r\n                {editIsOpen && \r\n                <div className=\"button-group\">\r\n                    <button className=\"confirm\" onClick={this.confirmOrCancel.bind(this, \"confirm\")}>\r\n                        <i className=\"fas fa-check\"></i>\r\n                    </button>\r\n                    <button className=\"cancel\" onClick={this.confirmOrCancel}>\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editable;","import React, { Component } from \"react\";\r\nimport Editable from \"./editable\";\r\nclass Card extends Component {\r\n\r\n\r\n    numberSpliter(number) {\r\n        let newNumber = \"\";\r\n        for (let i = 0; i <= 12; i = i + 4){\r\n            const nextFour = number.substr(i, 4);\r\n            newNumber += nextFour + \"  \";\r\n        }\r\n        return newNumber;\r\n    }\r\n\r\n    buildEditableContent(toEdit) {\r\n        const { card } = this.props;\r\n        const content = {\r\n            type: \"text\"\r\n        };\r\n        if (toEdit === card.number){ \r\n            content.text = card.number\r\n            content.classes = \"card-number\";\r\n        } else if (toEdit === card.cardOwner){ \r\n            content.text = card.cardOwner\r\n            content.classes = \"\";\r\n        } else if (toEdit === card.expiryDate){ \r\n            content.text = card.expiryDate\r\n            content.classes = \"\";\r\n        };\r\n        return content;\r\n    }\r\n\r\n    render() {\r\n        const { card } = this.props;\r\n        const classes = card && card.type ? `card ${card.type.toLowerCase()}` : \"card\";\r\n        const imageSrc = card.type === \"VISA\" ? \"/assets/images/visa.png\" : \"/assets/images/mastercard.png\";\r\n        const imageClass = card && card.type ? `card-image ${card.type.toLowerCase()}` : \"card-image\";\r\n        return (\r\n            <div className={classes}>\r\n                <img className=\"chip\" src=\"/assets/images/chip.png\" alt=\"\"/>\r\n                <Editable content={this.buildEditableContent(card.number)}/>\r\n                <div className=\"card-footer\">\r\n                    <div className=\"card-details\">\r\n                        <Editable content={this.buildEditableContent(card.expiryDate)}/>\r\n                        <Editable content={this.buildEditableContent(card.cardOwner)}/>\r\n                    </div>\r\n                    <img className={imageClass} src={imageSrc} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport Card from \"./card\";\r\nclass CardHolder extends Component {\r\n    render() {\r\n        const { cards } = this.props;\r\n        return (\r\n            <div className=\"card-holder\">\r\n                { cards.map( card => <Card key={card.id} card={card}/>) }\r\n            </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default CardHolder;","import React, { Component } from \"react\";\r\nclass CarouselItem extends Component {\r\n    render() {\r\n        const { item } = this.props;\r\n        const iconClass = () => {\r\n            if (item.trend === \"good\" && item.topic === \"Income\") {\r\n                return \"fas fa-arrow-up\";\r\n            } else if (item.trend === \"bad\" && item.topic === \"Income\") {\r\n                return \"fas fa-arrow-down\";\r\n            } else if (item.trend === \"good\" && item.topic === \"Spending\") {\r\n                return \"fas fa-arrow-down\";\r\n            } else if (item.trend === \"bad\" && item.topic === \"Spending\") {\r\n                return \"fas fa-arrow-up\";\r\n            }\r\n        };\r\n        const iconWrapClass = () => {\r\n            if (item.trend === \"good\" && item.topic === \"Income\") {\r\n                return \"icon-wrap good\";\r\n            } else if (item.trend === \"bad\" && item.topic === \"Income\") {\r\n                return \"icon-wrap bad\";\r\n            } else if (item.trend === \"good\" && item.topic === \"Spending\") {\r\n                return \"icon-wrap good\";\r\n            } else if (item.trend === \"bad\" && item.topic === \"Spending\") {\r\n                return \"icon-wrap bad\";\r\n            }\r\n        };\r\n        return (\r\n            <div className=\"carousel-item\" >\r\n                <div className=\"icon-div\">\r\n                    <div className={iconWrapClass()}>\r\n                        <i className={iconClass()}></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"details\">\r\n                    <p className=\"topic\">{item.topic}</p>\r\n                    <p className=\"value\">{item.value}</p>\r\n                </div>\r\n                {item.addDivider && <div className=\"carousel-divider\"></div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CarouselItem;","import React, { Component } from \"react\";\r\nimport CarouselItem from \"./carouselitem\";\r\nconst carouselItems = [{\r\n    id: \"010\",\r\n    topic: \"Income\", \r\n    value: \"CAN 32,500.00\",\r\n    trend: \"bad\"\r\n},{\r\n    id: \"011\",\r\n    topic: \"Spending\", \r\n    value: \"CAN 10,120.00\",\r\n    trend: \"bad\"\r\n}]\r\n\r\nclass Carousel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"carousel\">\r\n                { carouselItems.map( (item, index) => {\r\n                    if (index < carouselItems.length - 1) item.addDivider = true;\r\n                    return (\r\n                        <CarouselItem key={item.id} item={item} />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Carousel;","import React, { Component } from \"react\";\r\nimport CardHolder from \"./cardholder\";\r\nimport Carousel from \"./carousel\";\r\nclass Wallet extends Component {\r\n    render() {\r\n        const { wallet } = this.props;\r\n        const { user, cards } = wallet;\r\n        return wallet && wallet.user ? (\r\n            <div className=\"wallet\">\r\n                <div className=\"image-div\">\r\n                    <div className=\"image-wrap\">\r\n                        <img src={user.imageURL} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"name\">{user.name}</div>\r\n                <div className=\"wallet-total\">{new Intl.NumberFormat('en-CA', { style: 'currency', currency: 'CAN' }).format(wallet.total)}</div>\r\n                <Carousel />\r\n                <CardHolder cards={cards} />\r\n            </div>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default Wallet;","import React, { Component } from \"react\";\r\nimport NotificationContainer from \"./NotificationContainer\";\r\nimport { getWallet, closeWallet } from \"../actions/WalletActions\";\r\nimport \"../styles/walletcontainer.scss\";\r\nimport { connect } from 'react-redux'\r\nimport { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport Wallet from \"../components/wallet\";\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        wallet: state.wallet,\r\n        notification: state.notification\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n    getWallet: () => getWallet()(dispatch),\r\n    closeWallet: () => closeWallet()(dispatch)\r\n});\r\n\r\nclass WalletConnect extends Component {\r\n    state = {\r\n        walletOpen : false\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this._closeWallet = this._closeWallet.bind(this);\r\n    }\r\n\r\n    // componentWillReceiveProps(nextProps) {\r\n    //     if ( this.props.wallet !== nextProps.wallet) {\r\n    //         this.setState({walletOpen: true});\r\n    //     }\r\n    // }\r\n\r\n    _closeWallet() {\r\n        this.props.closeWallet();\r\n    }\r\n\r\n    render() {\r\n        const { notification, wallet} = this.props;\r\n        const { walletOpen } = wallet;\r\n        const openClass = walletOpen ? \"open-wallet\" : \"close-wallet\";\r\n        return (<div className={`wallet-container ${openClass}`} >\r\n            {notification.isWaiting && notification.waitingActionTypes.includes(ACTIONTYPES.GET_WALLET) ? (<NotificationContainer />) : <Wallet wallet={wallet}/>}\r\n            <i className=\"close fas fa-times\" title=\"CLOSE WALLET\" onClick={this._closeWallet}></i>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst WalletContainer = connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(WalletConnect);\r\n\r\nexport default WalletContainer;","import React, { Component } from \"react\";\r\nclass Overlay extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"overlay\">\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Overlay;","import React, { Component } from \"react\";\r\n\r\nclass Offer extends Component {\r\n    state = {\r\n        offerIsOpen: true\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.closeOffer = this.closeOffer.bind(this);\r\n    }\r\n\r\n    closeOffer(){\r\n        // Some type of call \r\n        this.setState({\r\n            offerIsOpen: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { offer } = this.props;\r\n        const { offerIsOpen } = this.state;\r\n        const offerClass = offerIsOpen ? \"offer\" : \"offer closing\";\r\n        return (\r\n            <div className={offerClass} style={{background: offer ? offer.background : \"#0984e3\"}}>\r\n                <div className=\"details flex-item\">\r\n                    <h2>{offer.header}</h2>\r\n                    <h4>{offer.title}</h4>\r\n                    <p onClick={offer.linkCallback} >{offer.link}</p>\r\n                </div>\r\n                <img className=\"flex-item\" src={offer.imageURL} alt=\"\"/>\r\n                <i className=\"fas fa-times close\" onClick={this.closeOffer}></i>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Offer;","import React, { Component } from \"react\";\r\nimport Offer from \"./offer\";\r\n\r\nconst offers = [{\r\n    header: \"50%\",\r\n    title: \"Savings from Costco\",\r\n    link: \"Read More...\",\r\n    linkCallback: () => console.log(\"Clicking offer...\"),\r\n    imageURL: \"/assets/images/costco.png\",\r\n    background: \"#0984e3\"\r\n}, {\r\n    header: \"23%\",\r\n    title: \"Savings from Walmart\",\r\n    link: \"Read More...\",\r\n    linkCallback: () => console.log(\"Clicking offer...\"),\r\n    imageURL: \"/assets/images/walmart.png\",\r\n    background: \"#00b894\"\r\n}];\r\nclass Offers extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"offers\">\r\n                {offers.map((offer,index) => <Offer key={index} offer={offer} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Offers;","import React, { Component } from \"react\";\r\nimport Carousel from \"../components/carousel\";\r\nimport Offers from \"../components/offers\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nlet id = 0;\r\nfunction createData(name, amount, date) {\r\n  id += 1;\r\n  return { id, name, amount, date};\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Walmart\", 198.99, Date.now()),\r\n  createData(\"Costco\", 300, Date.now()),\r\n  createData(\"Moxies\", 29.00, Date.now())\r\n];\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { dashboard } = this.props;\r\n        const { savingsSummary, charts } = dashboard;\r\n        return (charts.length > 0 && savingsSummary) && (\r\n            <div className=\"dashboard\">\r\n                <div className=\"savings-summary\">\r\n                    <div className=\"title-div\">\r\n                    <h4>Savings Total</h4>\r\n                    <p className=\"savings-total\">{savingsSummary.total}<span><i className=\"fas fa-caret-up\"></i>{savingsSummary.trend}</span></p>\r\n                    </div>\r\n                    <Carousel />\r\n                </div>\r\n                <Offers />\r\n                <div className=\"charts-recent\">\r\n                    <div className=\"recent\">\r\n                        <h4>Recent Transcations</h4>\r\n                        <Table>\r\n                            <TableHead className=\"table-head\">\r\n                            <TableRow>\r\n                                <TableCell>Transcation</TableCell>\r\n                                <TableCell align=\"right\">Amount</TableCell>\r\n                                <TableCell align=\"right\">Date</TableCell>\r\n                                <TableCell align=\"right\">Receipt</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {rows.map(row => {\r\n                                return (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.amount}</TableCell>\r\n                                    <TableCell align=\"right\">{new Date(row.date).toLocaleString()}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                    <Link to={{ pathname: \"/transcations/receipt\", search: `?id=${row.id}` }}>\r\n                                        <p className=\"view\">View Receipt</p>\r\n                                    </Link>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport HttpService from \"../services/httpService\";\r\nexport function getDashboard() {\r\n    return (dispatch) => {\r\n        dispatch({type: ACTIONTYPES.NOTIFICATION_START_WAITING, payload:{type: ACTIONTYPES.GET_DASHBOARD}});\r\n        setTimeout(() => {\r\n            HttpService.getDashboard().then((response) => {\r\n                dispatch({type: ACTIONTYPES.GET_DASHBOARD, payload: response});\r\n                dispatch({type: ACTIONTYPES.NOTIFICATION_STOP_WAITING, payload: {type: ACTIONTYPES.GET_DASHBOARD}});\r\n            });\r\n        }, 800);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport \"../styles/dashboardcontainer.scss\";\r\nimport Dashboard from \"../components/dashboard\";\r\nimport NotificationContainer from \"./NotificationContainer\";\r\nimport { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport { getDashboard } from \"../actions/dashboardActions\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        wallet: state.wallet,\r\n        notification: state.notification,\r\n        dashboard: state.dashboard\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDashboard: () => getDashboard()(dispatch)\r\n});\r\n\r\nconst isEmpty = (obj) => {\r\n    for(var key in obj) {\r\n        if(obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nclass DashboardConnect extends Component {\r\n\r\n    componentWillMount() {\r\n        const { dashboard, getDashboard } = this.props;\r\n        if (dashboard.charts.length === 0 && isEmpty(dashboard.savingsSummary)) {\r\n            getDashboard();\r\n        } \r\n    }\r\n\r\n    getClass() {\r\n        const { dashboard, notification, wallet } = this.props;\r\n        if (wallet.walletOpen && dashboard.charts.length && dashboard.savingsSummary) return \"dashboard-container walletOpen\";\r\n        if (notification.isWaiting) return \"dashboard-container isWaiting\";\r\n        return \"dashboard-container\";\r\n    }\r\n\r\n    render() {\r\n        const { dashboard, notification } = this.props;\r\n        const dashboardContainerClass = this.getClass();\r\n        return (\r\n            <div className={dashboardContainerClass} >\r\n                {notification.isWaiting && notification.waitingActionTypes.includes(ACTIONTYPES.GET_DASHBOARD) ? (<NotificationContainer />) : <Dashboard dashboard={dashboard} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DashboardContainer = connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(DashboardConnect);\r\n\r\nexport default DashboardContainer;","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport HttpService from \"../services/httpService\";\r\nexport function getTranscations() {\r\n    return (dispatch) => {\r\n        dispatch({type: ACTIONTYPES.NOTIFICATION_START_WAITING, payload:{type: ACTIONTYPES.GET_TRANSCATIONS}});\r\n        setTimeout(() => {\r\n            HttpService.getTranscations().then((response) => {\r\n                dispatch({type: ACTIONTYPES.GET_TRANSCATIONS, payload: response});\r\n                dispatch({type: ACTIONTYPES.NOTIFICATION_STOP_WAITING, payload: {type: ACTIONTYPES.GET_TRANSCATIONS}});\r\n            });\r\n        }, 800);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nclass Transcations extends Component {\r\n    render () {\r\n        const { transcations } = this.props;\r\n        return transcations.data.length > 0 ? (\r\n            <div className=\"transcations\">\r\n                <h2>Transcations</h2>\r\n                <p>Current Period: Nov 30 - Dec 29</p>\r\n                <Table>\r\n                            <TableHead className=\"table-head\">\r\n                            <TableRow>\r\n                                <TableCell>Transcation</TableCell>\r\n                                <TableCell align=\"right\">Amount</TableCell>\r\n                                <TableCell align=\"right\">Date</TableCell>\r\n                                <TableCell align=\"right\">Receipt</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {transcations.data.map(row => {\r\n                                return (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.amount}</TableCell>\r\n                                    <TableCell align=\"right\">{new Date(row.date).toLocaleString()}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Link to={{ pathname: \"/transcations/receipt\", search: `?id=${row.id}` }}>\r\n                                        <p className=\"view\">View Receipt</p>\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                );\r\n                            })}\r\n                            </TableBody>\r\n                        </Table>\r\n            </div>\r\n        ) : null;\r\n    }\r\n}\r\n\r\nexport default Transcations;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport \"../styles/transcationscontainer.scss\";\r\nimport NotificationContainer from \"./NotificationContainer\";\r\nimport { getTranscations } from \"../actions/transcationsActions\";\r\nimport { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport Transcations from \"../components/transcations\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        notification: state.notification,\r\n        transcations: state.transcations\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getTranscations: () => getTranscations()(dispatch)\r\n});\r\n\r\nclass TranscationsConnect extends Component {\r\n\r\n    componentWillMount() {\r\n        const {transcations, getTranscations} = this.props;\r\n        if (transcations.data.length === 0) getTranscations();\r\n    }\r\n\r\n    render() {\r\n        const { notification, transcations } = this.props;\r\n        const transcationsClass = \"transcations-container\";\r\n        return (\r\n            <div className={transcationsClass} >\r\n                {notification.isWaiting && notification.waitingActionTypes.includes(ACTIONTYPES.GET_TRANSCATIONS) ? (<NotificationContainer />) : <Transcations transcations={transcations}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst TranscationsContainer = connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(TranscationsConnect);\r\n\r\nexport default TranscationsContainer;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport \"../styles/receipts.scss\";\r\nimport NotificationContainer from \"./NotificationContainer\";\r\nimport { getReceipt } from \"../actions/receiptActions\";\r\nimport { getWallet } from \"../actions/WalletActions\";\r\nimport { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        wallet: state.wallet,\r\n        receipt: state.receipt,\r\n        notification: state.notification\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getReceipt: (id) => getReceipt(id)(dispatch),\r\n    getWallet: (openWallet) => getWallet(openWallet)(dispatch)\r\n});\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\nconst buildDateTime = (date) => {\r\n    const dateObj = new Date(date);\r\n    const transcationDate = dateObj.getDate();\r\n    const month = months[dateObj.getMonth()];\r\n    const hours = dateObj.getHours();\r\n    const minutes = dateObj.getMinutes();\r\n    const year = dateObj.getFullYear();\r\n\r\n    return {\r\n        date: `${transcationDate} ${month}, ${year}`,\r\n        time: `${hours}:${minutes}`\r\n    };\r\n}\r\n\r\nconst getCardUsedForTranscation = (wallet, cardID) => {\r\n    if (!wallet) return { error: \"Wallet is not loading\"};\r\n    const cards = wallet.cards;\r\n    if (!cards) return { error: \"Could not load cards for wallet\"}\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n        if (cards[i].id === cardID) return cards[i];\r\n    }\r\n\r\n    return {\r\n        error: \"Card used in transcation is not linked to this account\"\r\n    };\r\n}\r\n\r\nconst getEndingOfCardNumber = (number) => {\r\n    return `**${number.charAt(number.length - 1)}${number.charAt(number.length - 2)}`\r\n}\r\n\r\nclass ReceiptConnect extends Component {\r\n\r\n    componentWillMount() {\r\n        const {getReceipt, getWallet, location} = this.props;\r\n        const searchParams = new URLSearchParams(location.search);\r\n        const id = Number(searchParams.get(\"id\"));\r\n        getWallet(false);\r\n        getReceipt(id);\r\n    }\r\n\r\n    render() {\r\n        const { location, receipt, notification, wallet } = this.props;\r\n        const { receiptDetails } = receipt;\r\n        const receiptClass = \"receipt-container\";\r\n        const getCardUsed = getCardUsedForTranscation(wallet, receiptDetails.cardID);\r\n        const displayCardUsed =  getCardUsed.error ? getCardUsed.error : getCardUsed;\r\n        return (notification.isWaiting && notification.waitingActionTypes.includes(ACTIONTYPES.GET_RECEIPT) ? (<NotificationContainer />) : \r\n        ( receiptDetails && receiptDetails.name ?\r\n            (<div className={receiptClass} >\r\n                <div className=\"receipt\">\r\n                    <div className=\"thank-you-area\">\r\n                        <span className=\"green-check-span\">\r\n                            <i className=\"fas fa-check\"></i>\r\n                        </span>\r\n                        <h4>Thank you!</h4>\r\n                        <p>Your Transcation was successful</p>\r\n                        <div className=\"edge\"></div>\r\n                        <div className=\"edge\"></div>\r\n                    </div>\r\n                    <div className=\"store\">\r\n                        <div className=\"date\">\r\n                            <h2>STORE/RETAILER</h2>\r\n                            <p>{receiptDetails.name}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"date-time\">\r\n                        <div className=\"date\">\r\n                            <h2>Date</h2>\r\n                            <p>{buildDateTime(receiptDetails.date).date}</p>\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            <h2>Time</h2>\r\n                            <p>{buildDateTime(receiptDetails.date).time}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"sent-to\">\r\n                        <div className=\"date\">\r\n                            <h2>Sent To</h2>\r\n                            <p>kyle.wilsonmccormack@gmail.com</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"amount\">\r\n                        <div className=\"date\">\r\n                            <h2>Amount</h2>\r\n                            <p className=\"total\">{receiptDetails.amount}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"card-area\">\r\n                        <img className=\"card-image\" src={`/assets/images/${displayCardUsed.type}.png`}alt=\"\"/>\r\n                        <div className=\"details\">\r\n                            <p>Credit/Debit Card</p>\r\n                            <h2>{`${displayCardUsed.type} Card ending in ${getEndingOfCardNumber(displayCardUsed.number)}`}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/transcations\">\r\n                        <p>View all Transcations</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            ) : (\r\n            <div>\r\n                <Link to=\"/transcations\">\r\n                        <p>View all Transcations</p>\r\n                </Link>\r\n                <h1>There is no receipt data available at this time</h1>\r\n            </div>)\r\n        ))\r\n    }\r\n}\r\n\r\nconst ReceiptContainer = connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(ReceiptConnect);\r\n\r\nexport default ReceiptContainer;","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport HttpService from \"../services/httpService\";\r\nexport function getReceipt(id) {\r\n    return (dispatch) => {\r\n        dispatch({type: ACTIONTYPES.NOTIFICATION_START_WAITING, payload:{type: ACTIONTYPES.GET_RECEIPT}});\r\n        setTimeout(() => {\r\n            HttpService.getReceipt(id).then((response) => {\r\n                dispatch({type: ACTIONTYPES.GET_RECEIPT, payload: response});\r\n                dispatch({type: ACTIONTYPES.NOTIFICATION_STOP_WAITING, payload: {type: ACTIONTYPES.GET_RECEIPT}});\r\n            });\r\n        }, 800);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport \"../styles/alerts.scss\";\r\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line, ReferenceLine} from 'recharts';\r\nimport { getAlerts } from \"../actions/notificationAlertsActions\";\r\nimport { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport NotificationContainer from \"./NotificationContainer\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        wallet: state.wallet,\r\n        receipt: state.receipt,\r\n        notification: state.notification,\r\n        alerts: state.notificationAlerts.alerts\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   getAlerts: () => getAlerts()(dispatch)\r\n});\r\n\r\n\r\nconst monthlyLimits = [\r\n    {name: 'April', spending: 4000, pv: 2400, amt: 2400},\r\n    {name: 'May', spending: 3000, pv: 1398, amt: 2210},\r\n    {name: 'June', spending: 2000, pv: 9800, amt: 2290},\r\n    {name: 'July', spending: 2780, pv: 3908, amt: 2000},\r\n    {name: 'August', spending: 1890, pv: 4800, amt: 2181},\r\n    {name: 'November', spending: 2390, pv: 3800, amt: 2500},\r\n    {name: 'December', spending: 3490, pv: 4300, amt: 2100},\r\n];\r\n\r\nconst dailyLimits = [\r\n    {name: 'Tuesday', spending: 3490, pv: 4300, amt: 2100},\r\n];\r\n\r\nclass NotificationAlertsConnect extends Component {\r\n    componentWillMount() {\r\n        const { getAlerts } = this.props;\r\n        getAlerts();\r\n    }\r\n    render() {\r\n        const { alerts, notification } = this.props;\r\n        if (notification.isWaiting && notification.waitingActionTypes.includes(ACTIONTYPES.GET_NOTIFICATION_ALERTS)) {\r\n            return (<NotificationContainer />);\r\n        }\r\n        return alerts && alerts.length > 0 && (\r\n            <div className=\"alerts\">\r\n                {alerts.map((alert) => {\r\n                    return (\r\n                        <div key={alert.id} className=\"alert\">\r\n                            <h4>{alert.name}</h4>\r\n                            <LineChart width={600} height={200} data={alert.id === \"010\" ? dailyLimits : monthlyLimits}\r\n                                    margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                            <XAxis dataKey=\"name\"/>\r\n                            <YAxis domain={[0, alert.bounds.max]} />\r\n                            <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                            <Tooltip/>\r\n                            <Legend />\r\n                            <ReferenceLine y={alert.bounds.max} label=\"Max\" stroke=\"red\" strokeDasharray=\"3 3\" />\r\n                            <Line type=\"monotone\" dataKey=\"spending\" stroke=\"#82ca9d\" />\r\n                            </LineChart>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst NotificationAlertsContainer = connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(NotificationAlertsConnect);\r\n\r\nexport default NotificationAlertsContainer;","import { ACTIONTYPES } from \"../utils/actionTypes\";\r\nimport HttpService from \"../services/httpService\";\r\nexport function getAlerts() {\r\n    return (dispatch) => {\r\n        dispatch({type: ACTIONTYPES.NOTIFICATION_START_WAITING, payload:{type: ACTIONTYPES.GET_NOTIFICATION_ALERTS}});\r\n        setTimeout(() => {\r\n            HttpService.getAlerts().then((response) => {\r\n                dispatch({type: ACTIONTYPES.GET_NOTIFICATION_ALERTS, payload: response});\r\n                dispatch({type: ACTIONTYPES.NOTIFICATION_STOP_WAITING, payload: {type: ACTIONTYPES.GET_NOTIFICATION_ALERTS}});\r\n            });\r\n        }, 800);\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"../styles/maincontainer.scss\";\r\nimport WalletContainer from \"./WalletContainer\";\r\nimport { connect } from 'react-redux'\r\nimport Overlay from \"../components/overlay\";\r\nimport DashboardContainer from \"./DashboardContainer\";\r\nimport TranscationsContainer from \"./TranscationsContainer\";\r\nimport ReceiptContainer from \"./ReceiptContainer\";\r\nimport NotificationAlertsContainer from \"./NotificationAlertsContainer\";\r\nimport { getDashboard } from \"../actions/dashboardActions\";\r\nimport { getTranscations } from \"../actions/transcationsActions\";\r\nimport { changeNavigation } from \"../actions/navigationActions\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        wallet: state.wallet,\r\n        notification: state.notification,\r\n        navigation: state.navigation,\r\n        dashboard: state.dashboard,\r\n        transcations: state.transcations\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getDashboard: () => getDashboard()(dispatch),\r\n    getTranscations: () => getTranscations()(dispatch),\r\n    changeNavigation: (location) => changeNavigation(location)(dispatch)\r\n});\r\n\r\nclass MainConnect extends Component {\r\n\r\n    componentWillMount() {\r\n        const { location, changeNavigation, dashboard, transcations, history } = this.props;\r\n        if (dashboard.charts.length === 0 || transcations.data.length === 0) {//We are accessing app via URL\r\n            let changeTo;\r\n            switch(location.pathname) {\r\n                case \"/notification-alerts\":\r\n                    changeTo = location.pathname;\r\n                    break;\r\n                case \"/transcations\":\r\n                    changeTo = location.pathname;\r\n                    break;\r\n                case \"/transcations/receipt\": \r\n                    changeTo = location.pathname;\r\n                    break;\r\n                default:\r\n                    changeTo = \"/dashboard\";\r\n                    history.push(\"/dashboard\"); \r\n            }\r\n            changeNavigation(changeTo);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { wallet } = this.props;\r\n        const { walletOpen } = wallet;\r\n        const containerClass = walletOpen ? \"main-container wallet\" : \"main-container\";\r\n        return (\r\n            <div className={containerClass} >\r\n            <WalletContainer />\r\n            <Route path=\"/transcations/receipt\" component={ReceiptContainer}/>\r\n            <Route path=\"/dashboard\" component={DashboardContainer}/>\r\n            <Route path=\"/notification-alerts\" component={NotificationAlertsContainer} />\r\n            <Route path=\"/transcations\" exact component={TranscationsContainer}/>\r\n            {walletOpen ? <Overlay /> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MainContainer = connect(\r\n    mapStateToProps, mapDispatchToProps\r\n)(MainConnect);\r\n\r\nexport default MainContainer;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport SideBarWithRouter from \"./components/sidebar\";\r\nimport { getWallet } from \"./actions/WalletActions\";\r\nimport { changeNavigation } from \"./actions/navigationActions\";\r\nimport { connect } from 'react-redux'\r\nimport MainContainer from \"./containers/MainContainer\";\r\nimport './App.scss';\r\n\r\nconst sideBar = [{\r\n      id: \"010\",\r\n      size: \"sm\",\r\n      name: \"Dashboard\",\r\n      path: \"/dashboard\",\r\n      class: \"fas fa-signal\"\r\n    },{\r\n      id: \"011\",\r\n      size: \"sm\",\r\n      name: \"Wallet\",\r\n      class: \"fas fa-wallet\",\r\n    },{\r\n      id: \"012\",\r\n      size: \"sm\",\r\n      name: \"Notifications/Alerts\",\r\n      path: \"/notification-alerts\",\r\n      class: \"fas fa-bell\"\r\n    },{\r\n      id: \"013\",\r\n      size: \"sm\",\r\n      name: \"Transcations/Receipts\",\r\n      path: \"/transcations\",\r\n      class: \"fas fa-bookmark\"\r\n    },{\r\n      id: \"014\",\r\n      size: \"sm\",\r\n      name: \"Settings\",\r\n      path: \"/settings\",\r\n      class: \"fas fa-sliders-h\"\r\n    }]\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n      wallet: state.wallet,\r\n      notification: state.notification,\r\n      navigation: state.navigation\r\n  }\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  openWallet: () => getWallet()(dispatch),\r\n  changeNavigation: (location) => changeNavigation(location)(dispatch)\r\n});\r\n\r\n\r\n\r\nclass AppContainer extends Component {\r\n\r\n  buildItems() {\r\n    const { openWallet, wallet, changeNavigation} = this.props;\r\n    return sideBar.map((item) => {\r\n        switch(item.id) {\r\n          case \"010\": \r\n            return {...item,callback: changeNavigation.bind(this, \"/dashboard\")} // when Link is clicked\r\n          case \"011\": \r\n            return {...item,callback: openWallet, walletOpen: wallet.walletOpen}\r\n\r\n          case \"013\": \r\n            return {...item,callback: changeNavigation.bind(this, \"/transcations\")}\r\n          default: \r\n            return item;\r\n        }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <SideBarWithRouter items={this.buildItems()}/>\r\n          <Route\r\n              key={1}\r\n              path={\"/\"}\r\n              component={MainContainer}\r\n            />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nconst App = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AppContainer);\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./store\";\r\nimport App from './App';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}